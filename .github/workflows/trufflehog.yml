# This is a basic workflow to help you get started with Actions

name: trufflehog

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install truffleHog
        run: |
          # Trufflehog Repo variables
          OWNER=trufflesecurity
          REPO=trufflehog
          
          # Get latest trufflehog release Asset ID and Name
          export $(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/trufflesecurity/trufflehog/releases/latest \
            | jq -r '.assets [] | select(.name | contains("linux_amd64")) | @sh "ASSET_ID=\(.id) ASSET_NAME=\(.name)"')
          
          # Get Release asset
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$OWNER/$REPO/releases/assets/$ASSET_ID

          # Extract binary
          tar xf $ASSET_NAME
          chmod +x trufflehog

      # Runs a set of commands using the runners shell
      - name: Run truffleHog and decorate the Pull Request
        run: |
          trufflehog --version
          trufflehog git file://$GITHUB_WORKSPACE --since-commit ${{ github.event.repository.default_branch }} --branch HEAD --fail --no-update --github-actions --debug --only-verified
